{"ast":null,"code":"var _jsxFileName = \"/Users/alinaromanova/Documents/GitHub/ai-face-landmarks-detection/src/App.js\",\n  _s = $RefreshSig$();\n// import logo from './logo.svg';\n\nimport React, { useRef } from \"react\";\n// import logo from './logo.svg';\nimport * as tf from \"@tensorflow/tfjs\";\nimport * as facemesh from \"@tensorflow-models/facemesh\";\nimport Webcam from \"react-webcam\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n  const runFacemesh = async () => {\n    // OLD MODEL\n    // const net = await facemesh.load({\n    //   inputResolution: { width: 640, height: 480 },\n    //   scale: 0.8,\n    // });\n    // NEW MODEL\n    const net = await facemesh.load(facemesh.SupportedPackages.mediapipeFacemesh);\n    setInterval(() => {\n      detect(net);\n    }, 10);\n  };\n  const detect = async net => {\n    if (typeof webcamRef.current !== \"undefined\" && webcamRef.current !== null && webcamRef.current.video.readyState === 4) {\n      // Get Video Properties\n      const video = webcamRef.current.video;\n      const videoWidth = webcamRef.current.video.videoWidth;\n      const videoHeight = webcamRef.current.video.videoHeight;\n\n      // Set video width\n      webcamRef.current.video.width = videoWidth;\n      webcamRef.current.video.height = videoHeight;\n\n      // Set canvas width\n      canvasRef.current.width = videoWidth;\n      canvasRef.current.height = videoHeight;\n\n      // Make Detections\n      // OLD MODEL\n      //       const face = await net.estimateFaces(video);\n      // NEW MODEL\n      const face = await net.estimateFaces({\n        input: video\n      });\n      console.log(face);\n\n      // Get canvas context\n      const ctx = canvasRef.current.getContext(\"2d\");\n      requestAnimationFrame(() => {\n        drawMesh(face, ctx);\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(Webcam, {\n        ref: webcamRef,\n        style: {\n          position: \"absolute\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          left: 0,\n          right: 0,\n          textAlign: \"center\",\n          zindex: 9,\n          width: 640,\n          height: 480\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        style: {\n          position: \"absolute\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          left: 0,\n          right: 0,\n          textAlign: \"center\",\n          zindex: 9,\n          width: 640,\n          height: 480\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"AwQWgsmsPhWgADiRou0jnDEtoH4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useRef","tf","facemesh","Webcam","jsxDEV","_jsxDEV","App","_s","webcamRef","canvasRef","runFacemesh","net","load","SupportedPackages","mediapipeFacemesh","setInterval","detect","current","video","readyState","videoWidth","videoHeight","width","height","face","estimateFaces","input","console","log","ctx","getContext","requestAnimationFrame","drawMesh","className","children","ref","style","position","marginLeft","marginRight","left","right","textAlign","zindex","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/alinaromanova/Documents/GitHub/ai-face-landmarks-detection/src/App.js"],"sourcesContent":["// import logo from './logo.svg';\n\nimport React, {useRef} from \"react\";\n// import logo from './logo.svg';\nimport * as tf from \"@tensorflow/tfjs\";\nimport * as facemesh from \"@tensorflow-models/facemesh\";\nimport Webcam from \"react-webcam\";\n\nimport './App.css';\nfunction App() {\n  \n  const webcamRef = useRef(null)\n  const canvasRef = useRef(null);\n  \n  const runFacemesh = async () => {\n    // OLD MODEL\n    // const net = await facemesh.load({\n    //   inputResolution: { width: 640, height: 480 },\n    //   scale: 0.8,\n    // });\n    // NEW MODEL\n    const net = await facemesh.load(facemesh.SupportedPackages.mediapipeFacemesh);\n    setInterval(() => {\n      detect(net);\n    }, 10);\n  };\n  \n  const detect = async (net) => {\n    if (\n      typeof webcamRef.current !== \"undefined\" &&\n      webcamRef.current !== null &&\n      webcamRef.current.video.readyState === 4\n    ) {\n      // Get Video Properties\n      const video = webcamRef.current.video;\n      const videoWidth = webcamRef.current.video.videoWidth;\n      const videoHeight = webcamRef.current.video.videoHeight;\n      \n      // Set video width\n      webcamRef.current.video.width = videoWidth;\n      webcamRef.current.video.height = videoHeight;\n      \n      // Set canvas width\n      canvasRef.current.width = videoWidth;\n      canvasRef.current.height = videoHeight;\n      \n      // Make Detections\n      // OLD MODEL\n      //       const face = await net.estimateFaces(video);\n      // NEW MODEL\n      const face = await net.estimateFaces({input:video});\n      console.log(face);\n      \n      // Get canvas context\n      const ctx = canvasRef.current.getContext(\"2d\");\n      requestAnimationFrame(()=>{drawMesh(face, ctx)});\n    }\n  };\n  \n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Webcam\n          ref={webcamRef}\n          style={{\n            position: \"absolute\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            left: 0,\n            right: 0,\n            textAlign: \"center\",\n            zindex: 9,\n            width: 640,\n            height: 480,\n          }}\n        />\n        <canvas\n          ref={canvasRef}\n          style={{\n            position: \"absolute\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            left: 0,\n            right: 0,\n            textAlign: \"center\",\n            zindex: 9,\n            width: 640,\n            height: 480,\n          }}\n        />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAGC,MAAM,QAAO,OAAO;AACnC;AACA,OAAO,KAAKC,EAAE,MAAM,kBAAkB;AACtC,OAAO,KAAKC,QAAQ,MAAM,6BAA6B;AACvD,OAAOC,MAAM,MAAM,cAAc;AAEjC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAMC,SAAS,GAAGR,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAMS,SAAS,GAAGT,MAAM,CAAC,IAAI,CAAC;EAE9B,MAAMU,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B;IACA;IACA;IACA;IACA;IACA;IACA,MAAMC,GAAG,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAACV,QAAQ,CAACW,iBAAiB,CAACC,iBAAiB,CAAC;IAC7EC,WAAW,CAAC,MAAM;MAChBC,MAAM,CAACL,GAAG,CAAC;IACb,CAAC,EAAE,EAAE,CAAC;EACR,CAAC;EAED,MAAMK,MAAM,GAAG,MAAOL,GAAG,IAAK;IAC5B,IACE,OAAOH,SAAS,CAACS,OAAO,KAAK,WAAW,IACxCT,SAAS,CAACS,OAAO,KAAK,IAAI,IAC1BT,SAAS,CAACS,OAAO,CAACC,KAAK,CAACC,UAAU,KAAK,CAAC,EACxC;MACA;MACA,MAAMD,KAAK,GAAGV,SAAS,CAACS,OAAO,CAACC,KAAK;MACrC,MAAME,UAAU,GAAGZ,SAAS,CAACS,OAAO,CAACC,KAAK,CAACE,UAAU;MACrD,MAAMC,WAAW,GAAGb,SAAS,CAACS,OAAO,CAACC,KAAK,CAACG,WAAW;;MAEvD;MACAb,SAAS,CAACS,OAAO,CAACC,KAAK,CAACI,KAAK,GAAGF,UAAU;MAC1CZ,SAAS,CAACS,OAAO,CAACC,KAAK,CAACK,MAAM,GAAGF,WAAW;;MAE5C;MACAZ,SAAS,CAACQ,OAAO,CAACK,KAAK,GAAGF,UAAU;MACpCX,SAAS,CAACQ,OAAO,CAACM,MAAM,GAAGF,WAAW;;MAEtC;MACA;MACA;MACA;MACA,MAAMG,IAAI,GAAG,MAAMb,GAAG,CAACc,aAAa,CAAC;QAACC,KAAK,EAACR;MAAK,CAAC,CAAC;MACnDS,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;;MAEjB;MACA,MAAMK,GAAG,GAAGpB,SAAS,CAACQ,OAAO,CAACa,UAAU,CAAC,IAAI,CAAC;MAC9CC,qBAAqB,CAAC,MAAI;QAACC,QAAQ,CAACR,IAAI,EAAEK,GAAG,CAAC;MAAA,CAAC,CAAC;IAClD;EACF,CAAC;EAGD,oBACExB,OAAA;IAAK4B,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClB7B,OAAA;MAAQ4B,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAC5B7B,OAAA,CAACF,MAAM;QACLgC,GAAG,EAAE3B,SAAU;QACf4B,KAAK,EAAE;UACLC,QAAQ,EAAE,UAAU;UACpBC,UAAU,EAAE,MAAM;UAClBC,WAAW,EAAE,MAAM;UACnBC,IAAI,EAAE,CAAC;UACPC,KAAK,EAAE,CAAC;UACRC,SAAS,EAAE,QAAQ;UACnBC,MAAM,EAAE,CAAC;UACTrB,KAAK,EAAE,GAAG;UACVC,MAAM,EAAE;QACV;MAAE;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACF1C,OAAA;QACE8B,GAAG,EAAE1B,SAAU;QACf2B,KAAK,EAAE;UACLC,QAAQ,EAAE,UAAU;UACpBC,UAAU,EAAE,MAAM;UAClBC,WAAW,EAAE,MAAM;UACnBC,IAAI,EAAE,CAAC;UACPC,KAAK,EAAE,CAAC;UACRC,SAAS,EAAE,QAAQ;UACnBC,MAAM,EAAE,CAAC;UACTrB,KAAK,EAAE,GAAG;UACVC,MAAM,EAAE;QACV;MAAE;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACxC,EAAA,CArFQD,GAAG;AAAA0C,EAAA,GAAH1C,GAAG;AAuFZ,eAAeA,GAAG;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}